Should fix relative imports on eslint config;

file structure :

// I do prefer to have a "pages" set folder where we would differ each by business logic;
// isolate components that belong to specific page inside of pages
// distribute components that are shared in components area on src

pages/MainPage 
components


packages

fa-icons
material-ui
styled-components



typescript


bonus storybook?

UserArea

FilterArea 

ActiveChatSessionScreen should useRegisterForm and when displayed should overwrite the screen it also should be able to clear out the state of displayed.


MessagesArea

// we need to retrieve all ChatSessions from the server;
// an ChatSession is shared between users and can be a GroupChat or a PrivateChat
// we are implementing mocks of GroupChats only, so a user can have an archived ChatSession (as in he leaves the group or is expelished)

CUSTOM HOOKS
registerForm 
userHook - LoggedUserContext data extractor;
ChatSessionHooks  {
  useChatSessions : reducer that controls all chatSessions and share a path to addMessages (later we will have a path in firebase, becoming then a memoized subscription)
  useChatSession : give access to specific chat session information and if loggedUser belongs or not to that chat; It should with an session_id; 
  useActiveChatSession : ActiveSessionContext data extractor;
}

CONTEXTS
ActiveSessionContext - Implements a control to switch between messages; has an object containing all activeChats on server and their respective users; avoids rerendering MainPage when modifying current active message;
LoggedUserContext - intended to control whether current used is logged in or not; has an object containing the user active chats;


messages interface {
  it can have attachments, being an attachment of type different then sound,  which would still containg a textMessage, or it can have an audio message file type which would not have a textMessage
  it can have inline Buttons 
}

inlineButtons interface {
  each button can have an action onClick, being an action an Enum (inlineButtonsActions) 
}

inlineButtonsActions enum {
  REGISTER_NEW_USER = () => dispatchReact-hook-forms-register,
  APPROVE_USER
}


activeChatScreen = chatGroupId, isTakingPhoto, isSendingPhoto, isRecordingVoice



activeMessageScreen 


